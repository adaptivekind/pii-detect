name: CI

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download spaCy model
        run: |
          python -m spacy download en_core_web_sm

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check code formatting with black
        run: |
          black --check src/

      - name: Test pip install -e .
        run: |
          pip install -e .

      - name: Test package imports
        run: |
          python -c "from pii_detect import main; print('✓ pii_detect module imported successfully')"
          python -c "from detector import PIIDetector; print('✓ detector module imported successfully')"

      - name: Test installed CLI command
        run: |
          pii-detect --help
          which pii-detect

      - name: Test CLI with sample data
        run: |
          echo "Hello, my name is John Doe and my email is john@example.com" > test_sample.txt
          pii-detect test_sample.txt || true  # Allow failure since presidio might not be fully configured
          rm test_sample.txt

      - name: Run tests with pytest
        run: |
          pytest --cov=src --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run security checks with bandit
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          bandit -r src/

      - name: Check dependencies for vulnerabilities
        run: |
          safety check

  package-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel setuptools
          pip install -r requirements.txt

      - name: Download spaCy model
        run: |
          python -m spacy download en_core_web_sm

      - name: Build package
        run: |
          python -m build

      - name: Test package installation from wheel
        run: |
          pip install dist/*.whl
          pii-detect --help

      - name: Test package installation from source
        run: |
          pip uninstall -y pii-detect
          pip install dist/*.tar.gz
          pii-detect --help

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Run pre-commit hooks
        run: |
          # Skip pytest since already done in previous CI step
          SKIP=pytest pre-commit run --all-files
